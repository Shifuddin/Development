                        <p class="Para">We study the automatic synthesis of fair non-repudiation protocols, a class of fair exchange protocols, used for digital contract signing. First, we show how to specify the objectives of the participating agents, the trusted third party (TTP) and the protocols as path formulas in Linear Temporal Logic (LTL) and prove that the satisfaction of the objectives of the agents and the TTP imply satisfaction of the protocol objectives. We then show that <em class="EmphasisTypeItalic ">weak (co-operative) co-synthesis</em> and <em class="EmphasisTypeItalic ">classical (strictly competitive) co-synthesis</em> fail in synthesizing these protocols, whereas <em class="EmphasisTypeItalic ">assume-guarantee synthesis (AGS)</em> succeeds. We demonstrate the success of assume-guarantee synthesis as follows: (a)&nbsp;any solution of assume-guarantee synthesis is&nbsp;<em class="EmphasisTypeItalic ">attack-free</em>; no subset of participants can violate the objectives of the other participants without violating their own objectives; (b)&nbsp;the Asokan-Shoup-Waidner (ASW) certified mail protocol that has known vulnerabilities is not a solution of AGS; and (c)&nbsp;the Kremer-Markowitch (KM) non-repudiation protocol is a solution of AGS. To our knowledge this is the first application of synthesis to fair non-repudiation protocols, and our results show how synthesis can generate correct protocols and automatically discover vulnerabilities. The solution to assume-guarantee synthesis can be computed efficiently as the secure equilibrium solution of three-player graph games.</p>
