                            <p class="Para">Service-oriented architecture (SOA) is an architectural approach to development that turns traditional techniques upside down. SOA encourages organizations to think in terms of actual business services and the associated data, rather than low level technology details. Instead of developing applications from the ground up, SOA frees organizations to start with high level business definitions for data, interfaces, documents, and processes. SOA then maps these high level service definitions onto new or existing infrastructure, regardless of the details, location, or programming language in which the systems were written.</p>
                            <p class="Para">In this paper we share our practical experience regarding application of SOA to a very large and complex enterprise transformation. By transformation we mean modernization of legacy applications, operating systems, server components, development of new applications, and business process automation with incremental deployment option using either a traditional distributed heterogeneous environment or a set of Virtual machines deployed on a set of utility computing platforms (on-demand computing).</p>
                            <p class="Para">Transforming a large and complex enterprise requires digital visibility into the holistic view of the enterprise. This holistic view is captured as a set of interrelated models. Models are digital representations of the enterprise business architecture, the associated technology architecture, and their semantic dependencies. Models are stored in a living and manageable repository with impact analysis capability to accommodate for SOA modernization to be driven by the business needs.</p>
                            <p class="Para">We describe our 3D Visible Enterprise (3D-VE) modeling methodology as the analysis phase of our SOA approach. We then describe how such analysis guided us through modernization styles, where each style prescribes the transformation of a legacy entity into its modernized form while following our SOA governance. In this approach the modernization requirements are mapped into the appropriate transformation styles and finally to technical implementation. The mapping follows our SOA governance, a set of guidelines regarding transformation style selection, and the SOA design &amp; run time governance.</p>
                            <p class="Para">Relevant SOA standards and products supporting modernization implementation are used to carry the implementation. In particular, some aspect of modernization approach and Unisys SOA governance are described as well.</p>
                            <p class="Para">In this paper we tried to describe three important areas of our overall SOA solution methodology, namely the 3D VE modeling, the Architecture Driven Modernization and applied SOA governance to the ADM style. Our plan is to publish subsequent papers each describing the details of our SOA solution methodology, specifically the modeling phase, the tools and methods used to implement the applied ADM styles, criteria selecting ADM style, the SOA governance and the associated SOA standards and products.</p>
                            <p class="Para">The paper concludes with lessons learned through such a complex transformation, especially the importance of the front-end business process analysis leading us to identify the components or a subset of the enterprise computing environment for systematic and incremental SOA transformation. Finally we discuss some of the pros and cons of the transformation applying SOA.</p>
