                          <p class="Para">In component-based safety-critical embedded systems it is crucial to determine the cause(s) of the violation of a safety property, be it to issue a precise alert, to steer the system into a safe state, or to determine liability of component providers. In this paper we present an approach to blame components based on a single execution trace violating a safety property <span class="InlineEquation" id="IEq1">\(P\)</span>. The diagnosis relies on counterfactual reasoning (“what would have been the outcome if component <span class="InlineEquation" id="IEq2">\(C\)</span> had behaved correctly?”) to distinguish component failures that actually contributed to the outcome from failures that had little or no impact on the violation of <span class="InlineEquation" id="IEq3">\(P\)</span>.</p>
