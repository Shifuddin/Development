                          <p class="Para">We study the automatic synthesis of fair non-repudiation protocols, a class of fair exchange protocols, used for digital contract signing. First, we show how to specify the objectives of the participating agents and the trusted third party as path formulas in linear temporal logic and prove that the satisfaction of these objectives imply <em class="EmphasisTypeItalic ">fairness</em>; a property required of fair exchange protocols. We then show that <em class="EmphasisTypeItalic ">weak</em> (<em class="EmphasisTypeItalic ">co-operative</em>) <em class="EmphasisTypeItalic ">co-synthesis</em> and <em class="EmphasisTypeItalic ">classical</em> (<em class="EmphasisTypeItalic ">strictly competitive</em>) <em class="EmphasisTypeItalic ">co-synthesis</em> fail, whereas <em class="EmphasisTypeItalic ">assume-guarantee synthesis</em> (<em class="EmphasisTypeItalic ">AGS</em>) succeeds. We demonstrate the success of AGS as follows: (a) any solution of AGS is <em class="EmphasisTypeItalic ">attack-free</em>; no subset of participants can violate the objectives of the other participants; (b) the Asokan–Shoup–Waidner certified mail protocol that has known vulnerabilities is not a solution of AGS; (c) the Kremer–Markowitch non-repudiation protocol is a solution of AGS; and (d) AGS presents a new and symmetric fair non-repudiation protocol that is attack-free. To our knowledge this is the first application of synthesis to fair non-repudiation protocols, and our results show how synthesis can both automatically discover vulnerabilities in protocols and generate correct protocols. The solution to AGS can be computed efficiently as the secure equilibrium solution of three-player graph games.</p>
